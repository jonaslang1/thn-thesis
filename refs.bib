@article{abrhaComparisonHammingBCH2019,
  title = {Comparison of Hamming, {{BCH}}, and Reed {{Solomon}} Codes for Error Correction and Detecting Techniques},
  author = {Abrha, Dawit and Frdiesa, Musie and Wutabachew, Mamaru},
  year = {2019},
  month = jun,
  journal = {International Journal of Engineering Trends and Technology},
  volume = {67},
  number = {6},
  pages = {1--4},
  issn = {22315381},
  doi = {10.14445/22315381/IJETT-V67I6P201},
  urldate = {2024-05-19},
  abstract = {In digital communication, errors are introduced during the transmission of data from the transmitter to receiver due to noise or environmental interference. Hence, we have to use some kind of error control coding for error detection and error correction. In this paper we are applying error control mechanisms, like hamming code, BCH codes and reed Solomon codes to detect and correct the errors. Thus we are used Hamming code, ReedSolomon and BCH code control techniques to correct the errors. Lastly we are comparing the capability of error correcting those codes .the comparison is based on the strength of error correcting technique.},
  langid = {english},
  file = {/Users/jonaslang/Zotero/storage/VSXT7DRA/Abrha et al. - 2019 - Comparison of hamming, BCH, and reed Solomon codes.pdf}
}

@article{BCHCode2023,
  title = {{BCH-Code}},
  year = {2023},
  month = dec,
  journal = {Wikipedia},
  urldate = {2024-05-20},
  abstract = {BCH-Codes (Bose-Chaudhuri-Hocquenghem-Codes) sind zyklische fehlerkorrigierende Codes, welche in der digitalen Signalverarbeitung und Datenspeicherung eingesetzt werden. Der Name BCH ergibt sich aus den Anfangsbuchstaben der drei Wissenschaftler, die diesen Code entwickelt haben: R. C. Bose, D. K. Ray-Chaudhuri und A. Hocquenghem (1908--1990). BCH-Codes korrigieren mehrere 1-Bit-Fehler in einem l{\"a}ngeren Nutzer-Datenwort.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {ngerman},
  annotation = {Page Version ID: 239748567},
  file = {/Users/jonaslang/Zotero/storage/IMZZYZLV/index.html}
}

@article{berlekampNonbinaryBCHDecoding1968,
  title = {Nonbinary {{BCH}} Decoding ({{Abstr}}.)},
  author = {Berlekamp, E.},
  year = {1968},
  month = mar,
  journal = {IEEE Transactions on Information Theory},
  volume = {14},
  number = {2},
  pages = {242--242},
  issn = {1557-9654},
  doi = {10.1109/TIT.1968.1054109},
  urldate = {2024-06-14},
  abstract = {The decoding of BCH codes readily reduces to the solution of a certain key equation. An iterative algorithm is presented for solving this equation over any field. Following a heuristic derivation of the algorithm, a complete statement of the algorithm and proofs of its principal properties are given. The relationship of this algorithm to the classical matrix methods and the simplification which the algorithm takes in the special case of binary codes is then discussed. The generalization of the algorithm to BCH codes with a slightly different definition, the generalization of the algorithm to decode erasures as well as errors, and the extension of the algorithm to decode more thanterrors in certain eases are also presented.},
  keywords = {Codes,Gaussian channels,Heuristic algorithms,Laboratories,Mathematical models,Reactive power,Telephone sets},
  file = {/Users/jonaslang/Zotero/storage/RJDCEIE6/Berlekamp - 1968 - Nonbinary BCH decoding (Abstr.).pdf;/Users/jonaslang/Zotero/storage/68GBFWK5/1054109.html}
}

@inproceedings{biernatHardwareImplementationReedSolomon2010,
  title = {Hardware Implementation of the {{Reed-Solomon}} Decoder},
  booktitle = {2010 {{IEEE}} 14th {{International Conference}} on {{Intelligent Engineering Systems}}},
  author = {Biernat, J. and Serafin, T. and Kulikowski, W.},
  year = {2010},
  month = may,
  pages = {255--257},
  issn = {1543-9259},
  doi = {10.1109/INES.2010.5483838},
  urldate = {2024-06-06},
  abstract = {Reed-Solomon code is widely used in applications where a very high dependability of data transmission is expected. Encoding and decoding require some knowledge of the theory of Galois fields and can be done by numerical procedure or in hardware. The most complicated step is decoding. Hardware implementation of the double-error correcting decoder is known. In the paper we propose the solution for the code with triple or more error correction.},
  keywords = {Data communication,Decoding,Encoding,Error correction codes,Galois fields,Hardware,Polynomials,Reed-Solomon codes,Strontium,Vectors},
  file = {/Users/jonaslang/Zotero/storage/EYKF2JIV/Biernat et al. - 2010 - Hardware implementation of the Reed-Solomon decode.pdf;/Users/jonaslang/Zotero/storage/YP6CN3WY/5483838.html}
}

@inproceedings{changReedSolomonProductCodeRSPC1998,
  title = {A {{Reed-Solomon Product-Code}} ({{RS-PC}}) Decoder for {{DVD}} Applications},
  booktitle = {1998 {{IEEE International Solid-State Circuits Conference}}. {{Digest}} of {{Technical Papers}}, {{ISSCC}}. {{First Edition}} ({{Cat}}. {{No}}.{{98CH36156}})},
  author = {Chang, H.C. and Shung, C.},
  year = {1998},
  month = feb,
  pages = {390--391},
  issn = {0193-6530},
  doi = {10.1109/ISSCC.1998.672548},
  urldate = {2024-06-19},
  abstract = {The digital versatile disk (DVD), an emerging standard of optical storage, provides a higher capacity than audio CD, CD-ROM or video CD (VCD). To mitigate the errors introduced during manufacturing or by user damage, a Reed-Solomon Product-Code (RS-PC) is used in DVD for error correction. For this application, the authors present an RS-PC decoder chip with a dual-frame-buffer architecture. The decoder chip contains two frame buffer controllers that interface with two off-chip frame buffers, a (182,172) row RS decoder and a (208,192) column RS decoder. The chip uses a cell library in a 0.6 /spl mu/m SPDM CMOS process. The 99-pin chip is packaged in a 100 LDCQFP package, where 48 pins are for frame buffer interface and can be eliminated with embedded frame buffers. The row and column RS decoders work at 33 MHz with a 3 V supply. The RS-PC decoder is currently limited in speed by the off-chip frame buffer to about 18 MHz. The power dissipation is 102 mW at 33 MHz.},
  keywords = {CD-ROMs,CMOS process,Decoding,DVD,Error correction,Libraries,Manufacturing,Optical buffering,Packaging,Reed-Solomon codes},
  file = {/Users/jonaslang/Zotero/storage/75XS3HLH/Chang und Shung - 1998 - A Reed-Solomon Product-Code (RS-PC) decoder for DV.pdf;/Users/jonaslang/Zotero/storage/CE4SS6PM/672548.html}
}

@article{conOptimalTwoDimensionalReed2024,
  title = {Optimal {{Two-Dimensional Reed}}--{{Solomon Codes Correcting Insertions}} and {{Deletions}}},
  author = {Con, Roni and Shpilka, Amir and Tamo, Itzhak},
  year = {2024},
  month = jul,
  journal = {IEEE Transactions on Information Theory},
  volume = {70},
  number = {7},
  pages = {5012--5016},
  issn = {1557-9654},
  doi = {10.1109/TIT.2024.3387848},
  urldate = {2024-06-20},
  abstract = {Constructing Reed--Solomon (RS) codes that can correct insertions and deletions (insdel errors) has been considered in numerous recent works. Our focus in this paper is on the special case of two-dimensional RS-codes that can correct from n-3 insdel errors, the maximal possible number of insdel errors a two-dimensional linear code can recover from. It is known that an [n], [2]\textsubscript{q} RS-code that can correct from n-3 insdel errors satisfies that q={\O}mega (n{\textasciicircum}3) . On the other hand, there are several known constructions of [n], [2]\textsubscript{q} RS-codes that can correct from n-3 insdel errors, where the smallest field size is q=O(n{\textasciicircum}4) . In this short paper, we construct [n], [2]\textsubscript{q} Reed--Solomon codes that can correct n-3 insdel errors with q=O(n{\textasciicircum}3) , thereby resolving the minimum field size needed for such codes.},
  keywords = {Codes,Error correction codes,insertions and deletions,Linear codes,Reed-Solomon (RS) codes,Reed-Solomon codes,Symbols,Synchronization,Upper bound,Vectors},
  file = {/Users/jonaslang/Zotero/storage/V92ZGY3E/Con et al. - 2024 - Optimal Two-Dimensional Reedâ€“Solomon Codes Correct.pdf;/Users/jonaslang/Zotero/storage/IMGJL95H/10497143.html}
}

@misc{deepak2018WhatReedSolomon2022,
  title = {What Is {{Reed}}--{{Solomon Code}}?},
  author = {{deepak2018}},
  year = {2022},
  month = feb,
  journal = {GeeksforGeeks},
  urldate = {2024-05-20},
  abstract = {A Computer Science portal for geeks. It contains well written, well thought and well explained computer science and programming articles, quizzes and practice/competitive programming/company interview Questions.},
  chapter = {GATE CS},
  howpublished = {https://www.geeksforgeeks.org/what-is-reed-solomon-code/},
  langid = {american},
  file = {/Users/jonaslang/Zotero/storage/RMJ5C53A/what-is-reed-solomon-code.html}
}

@article{DVBH2024,
  title = {{{DVB-H}}},
  year = {2024},
  month = jan,
  journal = {Wikipedia},
  urldate = {2024-05-20},
  abstract = {DVB-H (digital video broadcasting - handheld) is one of three prevalent mobile TV formats. It is a technical specification for bringing broadcast services to mobile handsets. DVB-H was formally adopted as ETSI standard EN 302 304 in November 2004. The DVB-H specification (EN 302 304) can be downloaded from the official DVB-H website. From March 2008, DVB-H is officially endorsed by the European Union as the "preferred technology for terrestrial mobile broadcasting". The major competitors of this technology are Qualcomm's MediaFLO system, the 3G cellular system based MBMS mobile-TV standard, and the ATSC-M/H format in the U.S. DVB-SH (Satellite to Handhelds) now and DVB-NGH (Next Generation Handheld) in the future are possible enhancements to DVB-H, providing improved spectral efficiency and better modulation flexibility. DVB-H has been a commercial failure, and the service is no longer on-air. Ukraine was the last country with a nationwide broadcast in DVB-H, which began transitioning to DVB-T2 during 2019.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1197203368},
  file = {/Users/jonaslang/Zotero/storage/NRQD7G9Z/DVB-H.html}
}

@misc{fengBerlekampWelchAlgorithmGuide,
  title = {The {{Berlekamp-Welch Algorithm}}: {{A Guide}}},
  author = {Feng, Gilbert},
  langid = {english},
  file = {/Users/jonaslang/Zotero/storage/F2IC63JJ/Feng - The Berlekamp-Welch Algorithm A Guide.pdf}
}

@book{friedrichsKanalcodierung1996,
  title = {{Kanalcodierung}},
  author = {Friedrichs, Bernd},
  year = {1996},
  publisher = {Springer},
  address = {Berlin, Heidelberg},
  doi = {10.1007/978-3-642-60985-5},
  urldate = {2024-06-13},
  copyright = {http://www.springer.com/tdm},
  isbn = {978-3-540-59353-9 978-3-642-60985-5},
  langid = {ngerman},
  keywords = {Algorithmen,Analysis,Binom,Blockcode,Codierung,Datenubertragung,Faltungscode,Hamming-Code,Informationstechnik,Informationstheorie,Kanal,Kommunikation,Mathematische Grundlagen,Nachrichtentechnik,Wahrscheinlichkeit},
  file = {/Users/jonaslang/Zotero/storage/KZWUVPYW/Friedrichs - 1996 - Kanalcodierung.pdf}
}

@misc{geiselTutorialReedSolomonError1990,
  title = {Tutorial on {{Reed-Solomon Error Correction Coding}}},
  author = {Geisel, William A.},
  year = {1990},
  month = aug,
  publisher = {NASA},
  urldate = {2024-05-20},
  langid = {english},
  file = {/Users/jonaslang/Library/CloudStorage/OneDrive-TechnischeHochschuleNuÌˆrnbergGeorgSimonOhm/Dokumente/Data/Studium/Semester6/CompDesign/Material/19900019023.pdf}
}

@incollection{grasslQuantumReedSolomonCodes1999,
  title = {Quantum {{Reed-Solomon Codes}}},
  author = {Grassl, Markus and Geiselmann, Willi and Beth, Thomas},
  year = {1999},
  volume = {1719},
  eprint = {quant-ph/9910059},
  pages = {231--244},
  doi = {10.1007/3-540-46796-3_23},
  urldate = {2024-06-20},
  abstract = {After a brief introduction to both quantum computation and quantum error correction, we show how to construct quantum error-correcting codes based on classical BCH codes. With these codes, decoding can exploit additional information about the position of errors. This error model - the quantum erasure channel - is discussed. Finally, parameters of quantum BCH codes are provided.},
  archiveprefix = {arXiv},
  keywords = {Quantum Physics},
  file = {/Users/jonaslang/Zotero/storage/C4R23DQB/Grassl et al. - 1999 - Quantum Reed-Solomon Codes.pdf;/Users/jonaslang/Zotero/storage/BIR37U3G/9910059.html}
}

@misc{hubertPracticalReedSolomonProgrammers2021,
  title = {Practical {{Reed-Solomon}} for {{Programmers}}},
  author = {Hubert, Bert},
  year = {2021},
  month = jun,
  journal = {Bert Hubert's writings},
  urldate = {2024-05-12},
  abstract = {Recently I was doing some work decoding the new Galileo High Accuracy Service data. In short, this new service will allow Galileo (``European GPS'') users to achieve decimeter-level accuracy, which is nice. This ``HAS'' data is transmitted highly redundantly by making good use of Reed-Solomon encoding. To work with this data, I attempted to learn more about Reed-Solomon and I found almost all explanations were useless to me - oodles of advanced math, but no guidance of how to use R-S in practice.},
  chapter = {posts},
  howpublished = {https://berthub.eu/articles/posts/reed-solomon-for-programmers/},
  langid = {english},
  file = {/Users/jonaslang/Zotero/storage/R55KA38S/reed-solomon-for-programmers.html}
}

@inproceedings{ilievAnalysisEvaluationReedSolomon2008,
  title = {Analysis and Evaluation of {{Reed-Solomon}} Codes in {{Digital Video Broadcasting}} Systems},
  booktitle = {2008 {{Wireless Telecommunications Symposium}}},
  author = {Iliev, Teodor and Lokshina, Izabella and Radev, Dimitar and Hristov, Georgi},
  year = {2008},
  month = apr,
  pages = {92--96},
  issn = {1934-5070},
  doi = {10.1109/WTS.2008.4547549},
  urldate = {2024-06-19},
  abstract = {In this paper we analyze a decoding algorithm, which corrects both erasures and errors for Reed-Solomon (RS) codes based on the Euclidean algorithm together with the Berlekamp-Massey (BM) algorithm. We present and discuss the implementation of RS codes in the DVB (digital video broadcasting) standards and give a brief review of the new DVB-H standard. Analysis and simulation of the symbol error rate (SER) versus the output SER for the Reed-Solomon code used for the MPE-FEC (multi-protocol encapsulation-forward error correction) block in DVB-H has been conducted.},
  keywords = {Algorithm design and analysis,Code standards,Communications technology,Decoding,Digital video broadcasting,Error correction,Error correction codes,Galois fields,Information analysis,Reed-Solomon codes},
  file = {/Users/jonaslang/Zotero/storage/3JLURYVT/4547549.html}
}

@misc{ludwigVoyagerTelecommunications2002,
  title = {Voyager {{Telecommunications}}},
  author = {Ludwig, Roger and Taylor, Jim},
  year = {2002},
  month = mar,
  publisher = {NASA},
  urldate = {2024-05-20},
  langid = {english},
  file = {/Users/jonaslang/Zotero/storage/FAAXDW4I/Descanso4--Voyager_new.pdf}
}

@article{masseyShiftregisterSynthesisBCH1969,
  title = {Shift-Register Synthesis and {{BCH}} Decoding},
  author = {Massey, J.},
  year = {1969},
  month = jan,
  journal = {IEEE Transactions on Information Theory},
  volume = {15},
  number = {1},
  pages = {122--127},
  issn = {1557-9654},
  doi = {10.1109/TIT.1969.1054260},
  urldate = {2024-06-14},
  abstract = {It is shown in this paper that the iterative algorithm introduced by Berlekamp for decoding BCH codes actually provides a general solution to the problem of synthesizing the shortest linear feedback shift register capable of generating a prescribed finite sequence of digits. The shift-register approach leads to a simple proof of the validity of the algorithm as well as providing additional insight into its properties. The equivalence of the decoding problem for BCH codes to a shift-register synthesis problem is demonstrated, and other applications for the algorithm are suggested.},
  file = {/Users/jonaslang/Zotero/storage/VYB8DN5L/Massey - 1969 - Shift-register synthesis and BCH decoding.pdf}
}

@misc{neuhoffDigitalCommunicationsSignals,
  title = {Digital {{Communications Signals}} and {{Systems}}},
  author = {Neuhoff, David L.},
  urldate = {2024-06-24},
  langid = {english},
  file = {/Users/jonaslang/Zotero/storage/VM6MZDA7/BCH_codes.pdf}
}

@book{petersonErrorcorrectingCodes1972,
  title = {Error-Correcting {{Codes}}},
  author = {Peterson, William Wesley and Weldon, E. J.},
  year = {1972},
  publisher = {MIT Press},
  abstract = {Error-Correcting Codes, by Professor Peterson, was originally published in 1961. Now, with E. J. Weldon, Jr., as his coauthor, Professor Peterson has extensively rewritten his material. The book contains essentially all of the material of the first edition; however, the authors state that because there has been so much new work published in error-correcting codes, the preparation of this second edition proved to be a much greater task than writing the original book. The major additions are the chapters on majority-logic codes, synchronization, and convolutional codes. Much new material has also been added to the chapters on important linear block codes and cyclic codes. The authors cite some highly regarded books on recent work done in Eastern Europe and an extensive bibliography on coding theory in the Soviet Union [sic]. In its much-expanded form, Error-Correcting Codes may be considered another valuable contribution to computer coding.},
  googlebooks = {5kfwlFeklx0C},
  isbn = {978-0-262-16039-1},
  langid = {english},
  keywords = {Computers / Computer Science,Computers / Information Theory,Computers / Networking / General,Computers / Programming / General,Reference / Questions & Answers}
}

@misc{pillazoHowDecodeQR2013,
  title = {How to {{Decode}} a {{QR Code}} by {{Hand}}},
  author = {{Pillazo}},
  year = {2013},
  month = mar,
  urldate = {2024-05-20},
  abstract = {Wikipedia: http://en.wikipedia.org/wiki/QR\_code DataMatrix: ~~~{$\bullet~$}How~to~Decode~a~DataMatrix~by~Hand},
  file = {/Users/jonaslang/Library/CloudStorage/OneDrive-TechnischeHochschuleNuÌˆrnbergGeorgSimonOhm/Dokumente/Data/Studium/Semester6/CompDesign/Material/How to Decode a QR Code by Hand.mp4}
}

@article{QRCode2024,
  title = {{{QR}} Code},
  year = {2024},
  month = may,
  journal = {Wikipedia},
  urldate = {2024-05-20},
  abstract = {A QR code (quick-response code) is a type of two-dimensional matrix barcode, invented in 1994, by Japanese company Denso Wave for labelling automobile parts. A QR code consists of black squares arranged in a square grid on a white background, including some fiducial markers, which can be read by an imaging device, such as a camera, and processed using Reed--Solomon error correction until the image can be appropriately interpreted. The required data are then extracted from patterns that are present in both the horizontal and the vertical components of the QR image. Whereas a barcode is a machine-readable optical image that contains information specific to the labelled item, the QR code contains the data for a locator, an identifier, and for web-tracking. To efficiently store data, QR codes use four standardized modes of encoding: (i) numeric, (ii) alphanumeric, (iii) byte or binary, and (iv) kanji. Compared to standard UPC barcodes, the QR labelling system was applied beyond the automobile industry because of faster reading of the optical image and greater data-storage capacity in applications such as product tracking, item identification, time tracking, document management, and general marketing.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1224354720},
  file = {/Users/jonaslang/Zotero/storage/26H7WY7Q/index.html}
}

@misc{RAIDStorageTechnology2021,
  title = {{{RAID}} 6: {{Storage}} Technology to Minimize Data Loss},
  shorttitle = {{{RAID}} 6},
  year = {2021},
  month = aug,
  journal = {IONOS Digital Guide},
  urldate = {2024-05-20},
  abstract = {RAID 6 networks are all about fail-safety. But how does this data storage concept with double distributed parity actually work?},
  howpublished = {https://www.ionos.com/digitalguide/server/security/raid-6/},
  langid = {american},
  file = {/Users/jonaslang/Zotero/storage/W4XX6MVQ/raid-6.html}
}

@article{reedPolynomialCodesCertain1960,
  title = {Polynomial Codes over Certain Finite Fields},
  author = {Reed, Irving S and Solomon, Gustave},
  year = {1960},
  journal = {Journal of the society for industrial and applied mathematics},
  volume = {8},
  number = {2},
  pages = {300--304},
  publisher = {SIAM},
  file = {/Users/jonaslang/Library/CloudStorage/OneDrive-TechnischeHochschuleNuÌˆrnbergGeorgSimonOhm/Dokumente/Data/Studium/Semester6/CompDesign/Material/RS-1960.pdf}
}

@misc{rileyReedSolomonCodes,
  title = {Reed-{{Solomon Codes}}},
  author = {Riley, Martyn and Richardson, Iain},
  urldate = {2024-05-20},
  howpublished = {https://www.cs.cmu.edu/{\textasciitilde}guyb/realworld/reedsolomon/reed\_solomon\_codes.html},
  file = {/Users/jonaslang/Zotero/storage/BN8D5IIZ/reed_solomon_codes.html}
}

@article{sathiamoorthyXORingElephantsNovel2013,
  title = {{{XORing}} Elephants: Novel Erasure Codes for Big Data},
  shorttitle = {{{XORing}} Elephants},
  author = {Sathiamoorthy, Maheswaran and Asteris, Megasthenis and Papailiopoulos, Dimitris and Dimakis, Alexandros G. and Vadali, Ramkumar and Chen, Scott and Borthakur, Dhruba},
  year = {2013},
  month = mar,
  journal = {Proceedings of the VLDB Endowment},
  volume = {6},
  number = {5},
  pages = {325--336},
  issn = {2150-8097},
  doi = {10.14778/2535573.2488339},
  urldate = {2024-06-20},
  abstract = {Distributed storage systems for large clusters typically use replication to provide reliability. Recently, erasure codes have been used to reduce the large storage overhead of three-replicated systems. Reed-Solomon codes are the standard design choice and their high repair cost is often considered an unavoidable price to pay for high storage efficiency and high reliability. This paper shows how to overcome this limitation. We present a novel family of erasure codes that are efficiently repairable and offer higher reliability compared to Reed-Solomon codes. We show analytically that our codes are optimal on a recently identified tradeoff between locality and minimum distance. We implement our new codes in Hadoop HDFS and compare to a currently deployed HDFS module that uses Reed-Solomon codes. Our modified HDFS implementation shows a reduction of approximately 2{\texttimes} on the repair disk I/O and repair network traffic. The disadvantage of the new coding scheme is that it requires 14\% more storage compared to Reed-Solomon codes, an overhead shown to be information theoretically optimal to obtain locality. Because the new codes repair failures faster, this provides higher reliability, which is orders of magnitude higher compared to replication.},
  file = {/Users/jonaslang/Zotero/storage/B433KYHX/Sathiamoorthy et al. - 2013 - XORing Elephants Novel Erasure Codes for Big Data.pdf}
}

@phdthesis{schulz-hankeBCHCodesCombined2023,
  title = {{BCH codes with combined error correction and detectionBCH Codes mit kombinierter Korrektur und Erkennung}},
  author = {{Schulz-Hanke}, Christian},
  year = {2023},
  pages = {5094 KB, ii, 191 pages},
  doi = {10.25932/PUBLISHUP-61794},
  urldate = {2024-06-24},
  abstract = {Based on the BCH code, this thesis investigates how an BCH error correction approach can be combined with an additional detection of higher numbers of errors.  With the method of 1-bit correction with additional detection of higher errors, an approach is developed that performs the additional detection of higher errors by solving simple equations of the form s\_x = s\_1{\textasciicircum}x in parallel.  The number of these equations is in a linear relationship to the number of higher errors to be checked.  In this thesis, a generalization for such an approach is presented for up to 4-bit correction with additional detection of higher errors.  Therefore, a speculative error correction is carried out in parallel fashion for each correctable error count.  For each of the generated speculative error positions, a speculative syndrome is generated, which can be used to confirm the error positions and exclude detectable errors of higher number.  The presented approach differs from the approach developed in [Pet60], in which the number of errors is determined by calculating specific determinants in descending order until the first determinant is 0.  In the well-known method, the calculation of the determinants involves performing a factorial number of calculations in relation to the number of errors to be checked.  Compared to the well-known sequential method according to Berlekamp Massey [Ber68][Mas69], the calculations in the presented approach can be performed by solving simple equations and can be carried out in parallel.  In the well-known method for parallel correction of 4-bit errors, an equation of fourth degree in the GF(2{\textasciicircum}m) has to be solved.  This is done by solving a third-degree auxiliary equation and four second-degree equations in parallel.  In the present thesis it was shown that a second-degree equation can be saved, resulting in a simplification of the hardware for a parallel realization of the 4-bit correction.  The results obtained were verified by extensive simulations in software and hardware implementations.},
  copyright = {Creative Commons Attribution 4.0 International},
  langid = {ngerman},
  school = {Universit{\"a}t Potsdam},
  keywords = {004 Datenverarbeitung; Informatik},
  file = {/Users/jonaslang/Zotero/storage/CCUCCLRY/Schulz-Hanke - 2023 - BCH codes with combined error correction and detec.pdf}
}

@inproceedings{sippelReedSolomonCodes2019,
  title = {Reed--{{Solomon Codes}} over {{Fields}} of {{Characteristic Zero}}},
  booktitle = {2019 {{IEEE International Symposium}} on {{Information Theory}} ({{ISIT}})},
  author = {Sippel, Carmen and Ott, Cornelia and Puchinger, Sven and Bossert, Martin},
  year = {2019},
  month = jul,
  pages = {1537--1541},
  issn = {2157-8117},
  doi = {10.1109/ISIT.2019.8849332},
  urldate = {2024-06-20},
  abstract = {We study Reed-Solomon codes over arbitrary fields, inspired by several recent papers dealing with Gabidulin codes over fields of characteristic zero. Over the field of rational numbers, we derive bounds on the coefficient growth during encoding and the bit complexity of decoding, which is polynomial in the code length and in the bit width of error and codeword values. The results can be generalized to arbitrary number fields.},
  keywords = {Complexity theory,Compressed sensing,Decoding,Encoding,Generators,Parity check codes,Systematics},
  file = {/Users/jonaslang/Zotero/storage/P2JDM2P8/Sippel et al. - 2019 - Reedâ€“Solomon Codes over Fields of Characteristic Z.pdf}
}

@misc{southwellIntroductionErrorDetection,
  title = {{Introduction to Error Detection and Correction \#2: Reed-Solomon}},
  shorttitle = {{Introduction to Error Detection and Correction \#2}},
  author = {Southwell, Simon},
  urldate = {2024-05-20},
  abstract = {Introduction In the first article we looked at error detection, starting from parity before moving through checksums and the CRCs. This introduced the idea of modulo 2 arithmetic which maps to XOR gates, and linear feedback shift registers to implement polynomials and generate Galois fields (basical},
  howpublished = {https://www.linkedin.com/pulse/introduction-error-detection-correction-2-simon-southwell},
  langid = {ngerman},
  file = {/Users/jonaslang/Zotero/storage/ZTGFTK8G/introduction-error-detection-correction-2-simon-southwell.html}
}

@article{stoneMultipleBurstErrorCorrection1963,
  title = {Multiple-{{Burst Error Correction}} with the {{Chinese Remainder Theorem}}},
  author = {Stone, Jeremy J.},
  year = {1963},
  month = mar,
  journal = {Journal of the Society for Industrial and Applied Mathematics},
  volume = {11},
  number = {1},
  pages = {74--81},
  publisher = {{Society for Industrial and Applied Mathematics}},
  issn = {0368-4245},
  doi = {10.1137/0111005},
  urldate = {2024-06-13},
  abstract = {This paper considers the problem of simultaneous error-correction and burst-error detection using binary linear cyclic codes. For certain types of teletype channels, it pays to correct random errors and to detect bursts. It is shown that the burst-error detecting capability drops by one more than the length of the largest gap in the recursion polynomial when a binary linear cyclic code is used to correct single errors. Only special cases of this result are obtained for multiple-error-correction. The single-error result is applied to develop a new criterion for primitivity of polynomials over the two-element field. The criterion depends on the largest gap in the recursion polynomial corresponding to the polynomial to be tested for primitivity.},
  file = {/Users/jonaslang/Library/CloudStorage/OneDrive-TechnischeHochschuleNuÌˆrnbergGeorgSimonOhm/Dokumente/Data/Studium/Semester6/CompDesign/Material/ErrorCorrectionBCHStone.pdf}
}

@inproceedings{tiwariIntroductionQRCode2016,
  title = {An {{Introduction}} to {{QR Code Technology}}},
  booktitle = {2016 {{International Conference}} on {{Information Technology}} ({{ICIT}})},
  author = {Tiwari, Sumit},
  year = {2016},
  month = dec,
  pages = {39--44},
  doi = {10.1109/ICIT.2016.021},
  urldate = {2024-06-25},
  abstract = {QR i.e. "Quick Response" code is a 2D matrix code that is designed by keeping two points under consideration, i.e. it must store large amount of data as compared to 1D barcodes and it must be decoded at high speed using any handheld device like phones. QR code provides high data storage capacity, fast scanning, omnidirectional readability, and many other advantages including, error-correction (so that damaged code can also be read successfully) and different type of versions. Different varieties of QR code symbols like logo QR code, encrypted QR code, iQR Code are also available so that user can choose among them according to their need. Now these days, a QR code is applied in different application streams related to marketing, security, academics etc. and gain popularity at a really high pace. Day by day more people are getting aware of this technology and use it accordingly. The popularity of QR code grows rapidly with the growth of smartphone users and thus the QR code is rapidly arriving at high levels of acceptance worldwide.},
  isbn = {978-1-5090-3584-7},
  keywords = {Arrays,Decoding,Encoding,Error correction codes,Particle separators,QR code,QR Code Decoding,QR Code Encoding,QR code structure,Quick Response code,Timing,Uniform resource locators},
  file = {/Users/jonaslang/Zotero/storage/6XYNF2LM/Tiwari - 2016 - An Introduction to QR Code Technology.pdf;/Users/jonaslang/Zotero/storage/HTI5LHMV/7966807.html}
}

@misc{verbeureReedSolomonErrorCorrecting2022,
  title = {Reed-{{Solomon Error Correcting Codes}} from the {{Bottom Up}}},
  author = {Verbeure, Tom},
  year = {2022},
  month = aug,
  journal = {Electronics etc...},
  urldate = {2024-05-12},
  howpublished = {https://tomverbeure.github.io/2022/08/07/Reed-Solomon.html},
  langid = {english},
  file = {/Users/jonaslang/Zotero/storage/II9GVSB9/Reed-Solomon.html}
}

@book{vermillionEndtoEndDSLArchitectures,
  title = {End-to-{{End DSL Architectures}}},
  author = {Vermillion, Wayne C.},
  urldate = {2024-06-24},
  abstract = {Implement DSL end-to-end solutions for all six current DSL architectures Coverage includes: All DSL varieties: U.S. and international varieties include ANSI and ITU standards as well as legacy and...},
  isbn = {978-1-58705-087-9},
  langid = {english},
  file = {/Users/jonaslang/Zotero/storage/JXGR5NMU/1587050870.html;/Users/jonaslang/Zotero/storage/SAU5JW9Q/singleHit.html}
}

@misc{WasIstReedSolomonVerfahren2022,
  title = {{Was ist das Reed-Solomon-Verfahren?}},
  year = {2022},
  month = nov,
  journal = {eGovernment},
  urldate = {2024-05-20},
  abstract = {(Bild: aga7ta -- stock.adobe.com) Das Reed-Solomon-Verfahren beschreibt einen Kodierungsprozess. Dieser gestattet es, beim Senden und Empfangen digitaler Daten Fehlerkorrekturen vorzunehmen. Hierf{\"u}r kommen kleine Codebl{\"o}cke zum Einsatz, die symbolorientiert arbeiten.},
  howpublished = {https://www.egovernment.de/was-ist-das-reed-solomon-verfahren-a-cbb3a5d0b405888012d37555a7ef5225/},
  langid = {ngerman},
  file = {/Users/jonaslang/Zotero/storage/2INYGGGN/was-ist-das-reed-solomon-verfahren-a-cbb3a5d0b405888012d37555a7ef5225.html}
}

@book{weitzKonkreteMathematikNicht2021,
  title = {{Konkrete Mathematik (nicht nur) f{\"u}r Informatiker: Mit vielen Grafiken und Algorithmen in Python}},
  shorttitle = {{Konkrete Mathematik (nicht nur) f{\"u}r Informatiker}},
  author = {Weitz, Edmund},
  year = {2021},
  publisher = {Springer},
  address = {Berlin, Heidelberg},
  doi = {10.1007/978-3-662-62618-4},
  urldate = {2024-06-22},
  copyright = {http://www.springer.com/tdm},
  isbn = {978-3-662-62617-7 978-3-662-62618-4},
  langid = {ngerman},
  keywords = {Algorithmen,Analysis,Computeralgebra,Computergrafik,computerunterstutzte Mathematik,Diskrete Strukturen,Edmund Weitz,interaktiv,Kodierungstheorie,Komplexitatstheorie,Konkrete Mathematik (nicht nur) fur Informatiker,Kryptographie,Lineare Algebra,Mathematik fur Informatiker,Mathematik Video,numerische Methoden,Python,Stochastik,Visualisierung,Zahlen},
  file = {/Users/jonaslang/Zotero/storage/N53W8BPX/Weitz - 2021 - Konkrete Mathematik (nicht nur) fÃ¼r Informatiker .pdf;/Users/jonaslang/Zotero/storage/Z7PHRCDQ/Weitz - 2021 - Konkrete Mathematik (nicht nur) fÃ¼r Informatiker .pdf}
}

@misc{wendlingIntroductionReedSolomon2017,
  title = {Introduction to {{Reed-Solomon}}},
  author = {Wendling, Jeff},
  year = {2017},
  month = aug,
  journal = {Medium},
  urldate = {2024-05-12},
  abstract = {We've open-sourced a high-performance, forward error correction library that uses the Berlekamp-Welch algorithm to correct errors.},
  howpublished = {https://innovation.vivint.com/introduction-to-reed-solomon-bc264d0794f8},
  langid = {english},
  file = {/Users/jonaslang/Zotero/storage/DMQT55DJ/introduction-to-reed-solomon-bc264d0794f8.html}
}

@book{wickerReedSolomonCodes1994,
  title = {Reed {{Solomon}} Codes and Their Applications},
  editor = {Wicker, Stephen B.},
  year = {1994},
  publisher = {IEEE Press},
  address = {Piscataway, NJ},
  isbn = {978-0-7803-5391-6},
  langid = {english}
}

@misc{williamsHammingCodeFehlererkennungUnd2024,
  title = {{Hamming-Code: Fehlererkennung und -korrektur mit Beispielen}},
  shorttitle = {{Hamming-Code}},
  author = {Williams, Lawrence},
  year = {2024},
  month = feb,
  urldate = {2024-06-24},
  abstract = {In diesem Hamming-Code-Tutorial erfahren Sie, was Hamming-Code ist, seine Geschichte, Vor- und Nachteile, Fehlerarten, Fehlererkennung und Fehlerkorrektur.},
  howpublished = {https://www.guru99.com/de/hamming-code-error-correction-example.html},
  langid = {ngerman},
  file = {/Users/jonaslang/Zotero/storage/CK8MH6PN/hamming-code-error-correction-example.html}
}
