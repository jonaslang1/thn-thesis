@inproceedings{atkinsonBuiltinContractTesting2002,
  title = {Built-in {{Contract Testing}} in {{Model-driven}} , {{Component-Based Development}}},
  author = {Atkinson, C. and Groß, H.},
  date = {2002},
  url = {https://www.semanticscholar.org/paper/Built-in-Contract-Testing-in-Model-driven-%2C-Atkinson-Gro%C3%9F/5faf6fbb8470313324d499a7120ee47453a16ecd},
  urldate = {2025-01-27},
  abstract = {Assembling new software systems from prefabricated components is an attractive alternative to traditional software engineering practices which promises to increase reuse and reduce development costs. However, these benefits will only occur if separately developed components can be made to work effectively together with reasonable effort. Lengthy and costly in-situ verification and acceptance testing directly undermines the benefits of independent component fabrication and late system integration. This paper describes an approach for reducing manual system verification effort by equipping components with the ability to check their execution environments at runtime. When deployed in new systems, built-in test (BIT) components check the contract-compliance of their server components, including the run-time system, and thus automatically verify their ability to fulfill their own obligations. Enhancing traditional component-based development methods with built-in contract testing in this way reduces the costs associated with component assembly, and thus makes the “plug-and-play” vision of component-based development closer to practical reality.},
  file = {C:\Users\jonas\Zotero\storage\T4WCHIG2\Atkinson und Groß - 2002 - Built-in Contract Testing in Model-driven , Component-Based Development.pdf}
}

@inproceedings{ayasEmpiricalAnalysisMicroservices2022,
  title = {An {{Empirical Analysis}} of {{Microservices Systems Using Consumer-Driven Contract Testing}}},
  booktitle = {2022 48th {{Euromicro Conference}} on {{Software Engineering}} and {{Advanced Applications}} ({{SEAA}})},
  author = {Ayas, Hamdy Michael and Fischer, Hartmut and Leitner, Philipp and De Oliveira Neto, Francisco Gomes},
  date = {2022-08},
  pages = {92--99},
  doi = {10.1109/SEAA56994.2022.00022},
  url = {https://ieeexplore.ieee.org/document/10011503},
  urldate = {2025-01-27},
  abstract = {Testing has a prominent role in revealing faults in software based on microservices. One of the most important discussion points in MSAs is the granularity of services, often in different levels of abstraction. Similarly, the granularity of tests in MSAs is reflected in different test types. However, it is challenging to conceptualize how the overall testing architecture comes together when combining testing in different levels of abstraction for microservices. There is no empirical evidence on the overall testing architecture in such microservices implementations. Furthermore, there is a need to empirically understand how the current state of practice resonates with existing best practices on testing. In this study, we mine Github to find different candidate projects for an in-depth, qualitative assessment of their test artifacts. We analyze 16 repositories that use microservices and include various test artifacts. We focus on four projects that use consumer-driven-contract testing. Our results demonstrate how these projects cover different levels of testing. This study (i) drafts a testing architecture including activities and artifacts, and (ii) demonstrates how these align with best practices and guidelines. Our proposed architecture helps the categorization of system and test artifacts in empirical studies of microservices. Finally, we showcase a view of the boundaries between different levels of testing in systems using microservices.},
  eventtitle = {2022 48th {{Euromicro Conference}} on {{Software Engineering}} and {{Advanced Applications}} ({{SEAA}})},
  keywords = {Best practices,Computer architecture,consumer-driven contract test,Contracts,Microservice architecture,Microservice architectures,repository mining,Shape,Software,Testing},
  file = {C\:\\Users\\jonas\\Zotero\\storage\\DQKVX7HY\\Ayas et al. - 2022 - An Empirical Analysis of Microservices Systems Using Consumer-Driven Contract Testing.pdf;C\:\\Users\\jonas\\Zotero\\storage\\NH4QBYH6\\10011503.html}
}

@article{bontchevTestingSoftwareBased2008,
  title = {Testing {{Software Based}} on {{Design}} by {{Contract}}},
  author = {Bontchev, Boyan},
  date = {2008-01-01},
  url = {https://www.academia.edu/394122/Testing_Software_Based_on_Design_by_Contract},
  urldate = {2025-03-14},
  abstract = {Testing Software Based on Design by Contract},
  file = {C\:\\Users\\jonas\\Zotero\\storage\\BPCHNTH8\\Bontchev - 2008 - Testing Software Based on Design by Contract.pdf;C\:\\Users\\jonas\\Zotero\\storage\\HBPSMW6X\\Testing_Software_Based_on_Design_by_Contract.html}
}

@article{canforaPDFServiceOrientedArchitectures2009,
  title = {({{PDF}}) {{Service-Oriented Architectures Testing}}: {{A Survey}}},
  shorttitle = {({{PDF}}) {{Service-Oriented Architectures Testing}}},
  author = {Canfora, Gerardo and Di Penta, Massimiliano},
  date = {2009-01},
  journaltitle = {ResearchGate},
  doi = {10.1007/978-3-540-95888-8_4},
  url = {https://www.researchgate.net/publication/225220398_Service-Oriented_Architectures_Testing_A_Survey},
  urldate = {2025-03-14},
  abstract = {PDF | Testing of Service Oriented Architectures (SOA) plays a critical role in ensuring a successful deployment in any enterprise. SOA testing must span... | Find, read and cite all the research you need on ResearchGate},
  langid = {english},
  file = {C\:\\Users\\jonas\\Zotero\\storage\\DWTZU4VA\\2024 - (PDF) Service-Oriented Architectures Testing A Survey.pdf;C\:\\Users\\jonas\\Zotero\\storage\\JAG5A625\\225220398_Service-Oriented_Architectures_Testing_A_Survey.html}
}

@book{cruzContractTestingAction2025,
  title = {Contract {{Testing}} in {{Action}}},
  author = {Cruz, Marie and Prescott, Lewis},
  date = {2025-01},
  publisher = {Manning Publications Co.},
  location = {Shelter Island, NY},
  url = {https://learning.oreilly.com/library/view/contract-testing-in/9781633437241/},
  urldate = {2025-02-23},
  abstract = {Contract testing is a simple, reliable way to make sure that each service and API plays nice with other components so you can deploy independently and safely. Large, loosely coupled systems have...},
  isbn = {978-1-63343-724-1},
  langid = {english},
  pagetotal = {304},
  file = {C:\Users\jonas\Zotero\storage\KWRKDW3X\9781633437241.html}
}

@article{doncaMethodContinuousIntegration2022,
  title = {Method for {{Continuous Integration}} and {{Deployment Using}} a {{Pipeline Generator}} for {{Agile Software Projects}}},
  author = {Donca, Ionut-Catalin and Stan, Ovidiu Petru and Misaros, Marius and Gota, Dan and Miclea, Liviu},
  date = {2022-06-20},
  journaltitle = {Sensors (Basel, Switzerland)},
  shortjournal = {Sensors (Basel)},
  volume = {22},
  number = {12},
  eprint = {35746421},
  eprinttype = {pubmed},
  pages = {4637},
  issn = {1424-8220},
  doi = {10.3390/s22124637},
  url = {https://www.ncbi.nlm.nih.gov/pmc/articles/PMC9231338/},
  urldate = {2025-03-19},
  abstract = {Lately, the software development industry is going through a slow but real transformation. Software is increasingly a part of everything, and, software developers, are trying to cope with this exploding demand through more automation. The pipelining technique of continuous integration (CI) and continuous delivery (CD) has developed considerably due to the overwhelming demand for the deployment and deliverability of new features and applications. As a result, DevOps approaches and Agile principles have been developed, in which developers collaborate closely with infrastructure engineers to guarantee that their applications are deployed quickly and reliably. Thanks to pipeline approach thinking, the efficiency of projects has greatly improved. Agile practices represent the introduction to the system of new features in each sprint delivery. Those practices may contain well-developed features or can contain bugs or failures which impact the delivery. The pipeline approach, depicted in this paper, overcomes the problems of delivery, improving the delivery timeline, the test load steps, and the benchmarking tasks. It decreases system interruption by integrating multiple test steps and adds stability and deliverability to the entire process. It provides standardization which means having an established, time-tested process to use, and can also decrease ambiguity and guesswork, guarantee quality and boost productivity. This tool is developed with an interpreted language, namely Bash, which offers an easier method to integrate it into any platform. Based on the experimental results, we demonstrate the value that this solution currently creates. This solution provides an effective and efficient way to generate, manage, customize, and automate Agile-based CI and CD projects through automated pipelines. The suggested system acts as a starting point for standard CI/CD processes, caches Docker layers for subsequent usage, and implements highly available deliverables in a Kubernetes cluster using Helm. Changing the principles of this solution and expanding it into multiple platforms (windows) will be addressed in a future discussion.},
  pmcid = {PMC9231338},
  file = {C:\Users\jonas\Zotero\storage\8YR4WJQK\Donca et al. - 2022 - Method for Continuous Integration and Deployment Using a Pipeline Generator for Agile Software Proje.pdf}
}

@book{dowalilGrundlagenModularenSoftwareentwurfs2018,
  title = {Grundlagen Des Modularen {{Softwareentwurfs}}},
  author = {Dowalil, Herbert},
  origdate = {2018},
  publisher = {Hanser},
  location = {München},
  isbn = {978-3-446-45509-2},
  pagetotal = {XVII, 204 Seiten},
  file = {C:\Users\jonas\Zotero\storage\VIZ2YJQV\singleHit.html}
}

@book{duvallContinuousIntegrationImproving2007,
  title = {Continuous {{Integration}}: {{Improving Software Quality}} and {{Reducing Risk}}},
  shorttitle = {Continuous {{Integration}}},
  author = {Duvall, Paul M. and Matyas, Steve and Glover, Andrew},
  date = {2007-06},
  publisher = {Pearson Education, Inc.},
  location = {Boston, MA},
  url = {https://learning.oreilly.com/library/view/continuous-integration-improving/9780321336385/},
  urldate = {2025-01-08},
  abstract = {For any software developer who has spent days in “integration hell,” cobbling together myriad software components, Continuous Integration: Improving Software Quality and Reducing Risk illustrates...},
  isbn = {978-0-321-33638-5},
  langid = {english},
  pagetotal = {336},
  file = {C:\Users\jonas\Zotero\storage\Z7BF9QKD\9780321336385.html}
}

@online{fordSoftwareArchitectureHour,
  title = {Software {{Architecture Hour}} with {{Neal Ford}}: {{Microservices}} with {{Sam Newman}} ({{Audiobook}})},
  shorttitle = {Software {{Architecture Hour}} with {{Neal Ford}}},
  author = {Ford, Neal and Newman, Sam},
  url = {https://learning.oreilly.com/videos/software-architecture-hour/0636920828549/},
  urldate = {2025-04-06},
  abstract = {Microservices can greatly benefit your systems—but they bring along their own host of problems. If you’re getting started with microservices, Sam Newman’s Building Microservices offers a wealth of...},
  langid = {english},
  organization = {O'Reilly Online Learning},
  file = {C:\Users\jonas\Zotero\storage\FGTNBRPK\0636920828549.html}
}

@online{fowlerConsumerDrivenContractsService,
  title = {Consumer-{{Driven Contracts}}: {{A Service Evolution Pattern}}},
  shorttitle = {Consumer-{{Driven Contracts}}},
  author = {Fowler, Martin},
  url = {https://martinfowler.com/articles/consumerDrivenContracts.html},
  urldate = {2025-04-13},
  abstract = {Consumers should drive the definition of service contracts, while limiting to their individual needs. Suppliers should then validate against the union of their consumers' contracts.},
  organization = {martinfowler.com},
  file = {C:\Users\jonas\Zotero\storage\Q5AEJATN\consumerDrivenContracts.html}
}

@online{fowlerTestingStrategiesMicroservice2014,
  title = {Testing {{Strategies}} in a {{Microservice Architecture}}},
  author = {Fowler, Martin},
  date = {2014-11-18},
  url = {https://martinfowler.com/articles/microservice-testing/},
  urldate = {2025-03-19},
  abstract = {The microservice architectural style presents challenges for     organizing effective testing, this deck outlines the kinds of     tests you need and how to mix them.},
  organization = {martinfowler.com},
  file = {C:\Users\jonas\Zotero\storage\8VTRU7MY\microservice-testing.html}
}

@inproceedings{gmeinerAutomatedTestingContinuous2015,
  title = {Automated Testing in the Continuous Delivery Pipeline: {{A}} Case Study of an Online Company},
  shorttitle = {Automated Testing in the Continuous Delivery Pipeline},
  booktitle = {2015 {{IEEE Eighth International Conference}} on {{Software Testing}}, {{Verification}} and {{Validation Workshops}} ({{ICSTW}})},
  author = {Gmeiner, Johannes and Ramler, Rudolf and Haslinger, Julian},
  date = {2015-04},
  pages = {1--6},
  doi = {10.1109/ICSTW.2015.7107423},
  url = {https://ieeexplore.ieee.org/document/7107423},
  urldate = {2025-03-19},
  abstract = {Companies running an online business need to be able to frequently push new features and bug fixes from development into production. Successful high-performance online companies deliver code changes often several times per day. Their continuous delivery model supports the business needs of the online world. At the same time, however, such practices increase the risk of introducing quality issues and unwanted side effects. Rigorous test automation is therefore a key success factor for continuous delivery. In this paper we describe how automated testing is used in the continuous delivery pipeline of an Austrian online business company. The paper illustrates the complex technical and organizational challenges involved and summarizes the lessons from more than six years of practical experience in establishing and maintaining an effective continuous delivery pipeline.},
  eventtitle = {2015 {{IEEE Eighth International Conference}} on {{Software Testing}}, {{Verification}} and {{Validation Workshops}} ({{ICSTW}})},
  keywords = {automated testing,Companies,continuous delivery,continuous integration,continusous deployment,Databases,dev ops,Pipelines,Production,Software,Testing},
  file = {C:\Users\jonas\Zotero\storage\YZ88EJ5V\Gmeiner et al. - 2015 - Automated testing in the continuous delivery pipeline A case study of an online company.pdf}
}

@book{gutierrezSpringCloudData2021,
  title = {Spring {{Cloud Data Flow}}: {{Native Cloud Orchestration Services}} for {{Microservice Applications}} on {{Modern Runtimes}}},
  shorttitle = {Spring {{Cloud Data Flow}}},
  author = {Gutierrez, Felipe},
  date = {2021},
  publisher = {Apress},
  location = {Berkeley, CA},
  doi = {10.1007/978-1-4842-1239-4},
  url = {http://link.springer.com/10.1007/978-1-4842-1239-4},
  urldate = {2025-01-08},
  isbn = {978-1-4842-1240-0 978-1-4842-1239-4},
  langid = {english},
  keywords = {big data,Cloud,code,Data,Flow,Java,programming,software,Spring},
  file = {C:\Users\jonas\Zotero\storage\3LSLQCUH\Gutierrez - 2021 - Spring Cloud Data Flow Native Cloud Orchestration Services for Microservice Applications on Modern.pdf}
}

@book{haroMicroserviceAPIs2023,
  title = {Microservice {{APIs}}},
  author = {Haro, Jose},
  date = {2023-02},
  publisher = {Manning Publications Co.},
  location = {Shelter Island, NY},
  url = {https://learning.oreilly.com/library/view/microservice-apis/9781617298417/},
  urldate = {2025-04-02},
  abstract = {Strategies, best practices, and patterns that will help you design resilient microservices architecture and streamline your API integrations. In Microservice APIs, you’ll discover: Service...},
  isbn = {978-1-61729-841-7},
  langid = {english},
  pagetotal = {440},
  file = {C:\Users\jonas\Zotero\storage\P32QDRZ7\9781617298417.html}
}

@book{linzBasiswissenSoftwaretest2024,
  title = {Basiswissen Softwaretest},
  author = {Linz, Tilo and Spillner, Andreas},
  date = {2024-04},
  edition = {7},
  publisher = {dpunkt.verlag GmbH},
  location = {Heidelberg},
  url = {https://learning.oreilly.com/library/view/basiswissen-softwaretest-7th/9781098169114/},
  urldate = {2025-03-22},
  abstract = {Das ISTQB®-»Certified-Tester«-Programm ist das international standardisierte und weltweit anerkannte Aus- und Weiterbildungsschema für das Testen von Software. Das Buch behandelt den Lehrstoff zur...},
  isbn = {978-3-98889-005-4},
  langid = {ngerman},
  pagetotal = {408},
  file = {C:\Users\jonas\Zotero\storage\6M9ILU8K\9781098169114.html}
}

@article{mascheroniContinuousTestingSolutions2018,
  title = {Continuous {{Testing}} and {{Solutions}} for {{Testing Problems}} in {{Continuous Delivery}}: {{A Systematic Literature Review}}},
  shorttitle = {Http},
  author = {Mascheroni, Maximiliano A. and Irrazábal, Emanuel},
  date = {2018-09},
  journaltitle = {Computación y Sistemas},
  volume = {22},
  number = {3},
  pages = {1009--1038},
  issn = {1405-5546},
  doi = {10.13053/cys-22-3-2794},
  url = {http://www.scielo.org.mx/scielo.php?script=sci_abstract&pid=S1405-55462018000301009&lng=es&nrm=iso&tlng=en},
  urldate = {2025-03-19},
  langid = {english},
  file = {C:\Users\jonas\Zotero\storage\R7STMXGE\Mascheroni und Irrazábal - 2018 - httpwww.scielo.org.mxscielo.phpscript=sci_abstract&pid=S1405-55462018000301009&lng=es&nrm=iso&t.pdf}
}

@inproceedings{moeContinuousSoftwareTesting2015,
  title = {Continuous {{Software Testing}} in a {{Globally Distributed Project}}},
  booktitle = {2015 {{IEEE}} 10th {{International Conference}} on {{Global Software Engineering}}},
  author = {Moe, Nils Brede and Cruzes, Daniela and Dybå, Tore and Mikkelsen, Edda},
  date = {2015-07},
  pages = {130--134},
  issn = {2329-6313},
  doi = {10.1109/ICGSE.2015.24},
  url = {https://ieeexplore.ieee.org/document/7224491},
  urldate = {2025-03-19},
  abstract = {In globally distributed software projects the testing expertise may be scattered across multiple locations. We describe and discuss a globally distributed agile project at DNV GL Software, a multinational provider of software for a safer, smarter and greener future in the energy, process and maritime industries. DNV GL Software is headquartered in Norway. The project is distributed across two locations with 12 team members in Norway and three testers in China. In a distributed agile team with little overlap in working hours the challenge is to coordinate tasks and test activities in a way that makes coordination and communication efficient. DNV GL Software believes in including the remote testers as part of the agile team, enabling self-managing, cross-functional virtual teams that are capable of taking the full responsibility for implementing and verifying one entire feature. To support the communication between testers in China and the rest of the team in Norway, the team needs a shared understanding of the goal of a release and how to collaborate. We conducted interviews with the team and representatives from different roles in the organization, and we performed retrospectives with the team. In this article we describe how continuous testing based on continuous and frequent feedback ensures knowledge sharing and safeguarding the quality of the system under development. We found the following enablers for a successful virtual agile team: coordination by mutual adjustment, dedicated testers and low turnover, shifting working hours, and self-management and autonomy. Non-technical factors, such as socio-technical and organizational factors, have a significant influence on the way software testing is performed in an agile virtual team. To be successful the organization needs to invest in bringing the remote testers closer to the rest of the team, as part of the virtual team.},
  eventtitle = {2015 {{IEEE}} 10th {{International Conference}} on {{Global Software Engineering}}},
  keywords = {agile,Computer bugs,Context,distributed agile,Documentation,Software,Software testing,test centers,testing,Virtual groups,virtual teams},
  file = {C\:\\Users\\jonas\\Zotero\\storage\\IVJSCBPH\\Moe et al. - 2015 - Continuous Software Testing in a Globally Distributed Project.pdf;C\:\\Users\\jonas\\Zotero\\storage\\SEXR37BN\\7224491.html}
}

@book{morganTestingMicroservicesConsumerdriven2019a,
  title = {Testing Microservices with Consumer-Driven Contracts},
  author = {Morgan, Andrew},
  origdate = {2019},
  publisher = {O'Reilly Media},
  location = {[Place of publication not identified]},
  pagetotal = {1 Online-Ressource (1 streaming video file (40 min., 27 sec.))},
  file = {C:\Users\jonas\Zotero\storage\27RL4LKR\singleHit.html}
}

@book{newmanBuildingMicroservices2021,
  title = {Building {{Microservices}}},
  author = {Newman, Sam},
  date = {2021-08},
  edition = {2},
  publisher = {O'Reilly Media, Inc.},
  location = {Sebastopol, CA},
  url = {https://learning.oreilly.com/library/view/building-microservices-2nd/9781492034018/},
  urldate = {2025-03-19},
  abstract = {As organizations shift from monolithic applications to smaller, self-contained microservices, distributed systems have become more fine-grained. But developing these new systems brings its own...},
  isbn = {978-1-4920-3401-8},
  langid = {english},
  pagetotal = {612},
  file = {C:\Users\jonas\Zotero\storage\3ZRXLR79\9781492034018.html}
}

@book{newmanMonolithMicroservices2019,
  title = {Monolith to {{Microservices}}},
  author = {Newman, Sam},
  date = {2019-11},
  publisher = {O'Reilly Media, Inc.},
  location = {Sebastopol, CA},
  url = {https://learning.oreilly.com/library/view/monolith-to-microservices/9781492047834/},
  urldate = {2025-01-27},
  abstract = {How do you detangle a monolithic system and migrate it to a microservice architecture? How do you do it while maintaining business-as-usual? As a companion to Sam Newman’s extremely popular...},
  isbn = {978-1-4920-4783-4},
  langid = {english},
  pagetotal = {270},
  file = {C:\Users\jonas\Zotero\storage\YLR9SVHZ\9781492047834.html}
}

@book{postBesserCoden2021,
  title = {Besser Coden},
  author = {Post, Uwe},
  date = {2021},
  edition = {2., aktualisierte und erweiterte Auflage},
  publisher = {Rheinwerk Computing},
  location = {Bonn},
  isbn = {978-3-8362-8492-9},
  pagetotal = {404 Seiten},
  file = {C:\Users\jonas\Zotero\storage\AB89F4ZC\singleHit.html}
}

@book{richardsonMicroservicesPatterns2018,
  title = {Microservices {{Patterns}}},
  author = {Richardson, Chris},
  date = {2018-11},
  publisher = {Manning Publications Co.},
  location = {Shelter Island, NY},
  url = {https://learning.oreilly.com/library/view/microservices-patterns/9781617294549/},
  urldate = {2025-03-19},
  abstract = {Microservices Patterns teaches enterprise developers and architects how to build applications with the microservice architecture. Rather than simply advocating for the use the microservice...},
  isbn = {978-1-61729-454-9},
  langid = {english},
  file = {C:\Users\jonas\Zotero\storage\SAD6SATN\9781617294549.html}
}

@online{richardsonSoftwareArchitectureHour,
  title = {Software {{Architecture Hour}} with {{Neal Ford}}: {{Microservice Migration}} with {{Chris Richardson}}},
  shorttitle = {Software {{Architecture Hour}} with {{Neal Ford}}},
  author = {Richardson, Chris and Ford, Neal},
  url = {https://learning.oreilly.com/videos/software-architecture-hour/0636920889625/},
  urldate = {2025-04-06},
  abstract = {Join us for a special conversation with Neal Ford and Chris Richardson, an experienced software architect, creator of the original CloudFoundry.com, and the author of POJOs in Action and...},
  langid = {english},
  organization = {O'Reilly Online Learning},
  file = {C:\Users\jonas\Zotero\storage\TVQWUSF9\0636920889625.html}
}

@article{shahinContinuousIntegrationDelivery2017,
  title = {Continuous {{Integration}}, {{Delivery}} and {{Deployment}}: {{A Systematic Review}} on {{Approaches}}, {{Tools}}, {{Challenges}} and {{Practices}}},
  shorttitle = {Continuous {{Integration}}, {{Delivery}} and {{Deployment}}},
  author = {Shahin, Mojtaba and Ali Babar, Muhammad and Zhu, Liming},
  date = {2017},
  journaltitle = {IEEE Access},
  volume = {5},
  pages = {3909--3943},
  issn = {2169-3536},
  doi = {10.1109/ACCESS.2017.2685629},
  url = {https://ieeexplore.ieee.org/document/7884954},
  urldate = {2025-03-19},
  abstract = {Continuous practices, i.e., continuous integration, delivery, and deployment, are the software development industry practices that enable organizations to frequently and reliably release new features and products. With the increasing interest in the literature on continuous practices, it is important to systematically review and synthesize the approaches, tools, challenges, and practices reported for adopting and implementing continuous practices. This paper aimed at systematically reviewing the state of the art of continuous practices to classify approaches and tools, identify challenges and practices in this regard, and identify the gaps for future research. We used the systematic literature review method for reviewing the peer-reviewed papers on continuous practices published between 2004 and June 1, 2016. We applied the thematic analysis method for analyzing the data extracted from reviewing 69 papers selected using predefined criteria. We have identified 30 approaches and associated tools, which facilitate the implementation of continuous practices in the following ways: (1) reducing build and test time in continuous integration (CI); (2) increasing visibility and awareness on build and test results in CI; (3) supporting (semi-) automated continuous testing; (4) detecting violations, flaws, and faults in CI; (5) addressing security and scalability issues in deployment pipeline; and (6) improving dependability and reliability of deployment process. We have also determined a list of critical factors, such as testing (effort and time), team awareness and transparency, good design principles, customer, highly skilled and motivated team, application domain, and appropriate infrastructure that should be carefully considered when introducing continuous practices in a given organization. The majority of the reviewed papers were validation (34.7\%) and evaluation (36.2\%) research types. This paper also reveals that continuous practices have been successfully applied to both greenfield and maintenance projects. Continuous practices have become an important area of software engineering research and practice. While the reported approaches, tools, and practices are addressing a wide range of challenges, there are several challenges and gaps, which require future research work for improving the capturing and reporting of contextual information in the studies reporting different aspects of continuous practices; gaining a deep understanding of how software-intensive systems should be (re-) architected to support continuous practices; and addressing the lack of knowledge and tools for engineering processes of designing and running secure deployment pipelines.},
  eventtitle = {{{IEEE Access}}},
  keywords = {Bibliographies,continuous delivery,continuous deployment,Continuous integration,continuous software engineering,empirical software engineering,Organizations,Production,Software,Software engineering,systematic literature review,Systematics,Testing},
  file = {C\:\\Users\\jonas\\Zotero\\storage\\A5HAFMM5\\Shahin et al. - 2017 - Continuous Integration, Delivery and Deployment A Systematic Review on Approaches, Tools, Challenge.pdf;C\:\\Users\\jonas\\Zotero\\storage\\JQBIJPR8\\7884954.html}
}

@inproceedings{simosaContractTestingMicroservicesBased2023a,
  title = {Contract {{Testing}} in {{Microservices-Based Systems}}: {{A Survey}}},
  shorttitle = {Contract {{Testing}} in {{Microservices-Based Systems}}},
  booktitle = {2023 {{IEEE}} 14th {{International Conference}} on {{Software Engineering}} and {{Service Science}} ({{ICSESS}})},
  author = {Simosa, Manuel and Siqueira, Frank},
  date = {2023-10},
  pages = {312--317},
  issn = {2327-0594},
  doi = {10.1109/ICSESS58500.2023.10293058},
  url = {https://ieeexplore.ieee.org/document/10293058},
  urldate = {2025-01-27},
  abstract = {Monolothic applications are being migrated to architectures based on microservices, due to its popularity, integration capacity and the development independence of each microservice. This migration requires new integration testing methods, ensuring reliable communication between microservices. This study is based on systematically identifying, analyzing and classifying publication trends, research topics, approaches, tools and challenges for communication between microservices, considering the use of contract tests. From an initial set of 496 articles, 25 of primary studies were selected, aiming to answer three research questions. As a result of this study, we have identified: (i) the research themes that characterize emerging approaches; (ii) the techniques and tools that can be used in various parts of the development cycle; (iii) the challenges of planning test cycles and facilitating the design of microservices architectures based on the study of contracts.},
  eventtitle = {2023 {{IEEE}} 14th {{International Conference}} on {{Software Engineering}} and {{Service Science}} ({{ICSESS}})},
  keywords = {Contract testing,Contracts,Libraries,Market research,Microservice architectures,Microservices,MSA,Quality assurance,Reliability,Surveys},
  file = {C\:\\Users\\jonas\\Zotero\\storage\\JK8XRJ4B\\Simosa und Siqueira - 2023 - Contract Testing in Microservices-Based Systems A Survey.pdf;C\:\\Users\\jonas\\Zotero\\storage\\GZMVX7GL\\10293058.html}
}

@book{singhSoftwareTesting2011,
  title = {Software {{Testing}}},
  author = {Singh, Yogesh},
  date = {2011},
  publisher = {Cambridge University Press},
  location = {Cambridge},
  doi = {10.1017/CBO9781139196185},
  url = {https://www-cambridge-org.thn.idm.oclc.org/core/books/software-testing/ADF93C6EDB4761D9ACFE2DE987A0DBD2},
  urldate = {2025-03-20},
  abstract = {Software testing is conducted to provide stakeholders with information about the quality of a product under testing. The book, which is a result of the two decades of teaching experience of the author, aims to present testing concepts and methods that can be used in practice. The text will help readers to learn how to find faults in software before it is made available to users. A judicious mix of software testing concepts, solved problems and real-life case studies makes the book ideal for a basic course in software testing. The book will be a useful resource for senior undergraduate/graduate students of engineering, academics, software practitioners and researchers.},
  isbn = {978-1-107-01296-7},
  file = {C\:\\Users\\jonas\\Zotero\\storage\\Z3UKB7A5\\Singh - 2011 - Software Testing.pdf;C\:\\Users\\jonas\\Zotero\\storage\\H83IE7UG\\ADF93C6EDB4761D9ACFE2DE987A0DBD2.html}
}

@article{soylemezChallengesSolutionDirections2022,
  title = {Challenges and {{Solution Directions}} of {{Microservice Architectures}}: {{A Systematic Literature Review}}},
  shorttitle = {Challenges and {{Solution Directions}} of {{Microservice Architectures}}},
  author = {Söylemez, Mehmet and Tekinerdogan, Bedir and Kolukısa Tarhan, Ayça},
  date = {2022-01},
  journaltitle = {Applied Sciences},
  volume = {12},
  number = {11},
  pages = {5507},
  publisher = {Multidisciplinary Digital Publishing Institute},
  issn = {2076-3417},
  doi = {10.3390/app12115507},
  url = {https://www.mdpi.com/2076-3417/12/11/5507},
  urldate = {2025-03-19},
  abstract = {Microservice architecture (MSA) is an architectural style for distributed software systems, which promotes the use of fine-grained services with their own lifecycles. Several benefits of MSA have been reported in the literature, including increased modularity, flexible configuration, easier development, easier maintenance, and increased productivity. On the other hand, the adoption of MSA for a specific software system is not trivial and a number of challenges have been reported in the literature. These challenges should be evaluated carefully concerning project requirements before successful MSA adoption. Unfortunately, there has been no attempt to systematically review and categorize these challenges and the potential solution directions. This article aims at identifying the state of the art of MSA and describing the challenges in applying MSA together with the identified solution directions. A systematic literature review (SLR) is performed using the published literature since the introduction of MSA in 2014. Overall, 3842 papers were discovered using a well-planned review protocol, and 85 of them were selected as primary studies and analyzed regarding research questions. Nine basic categories of challenges were identified and detailed into 40 sub-categories, for which potential solution directions were explored. MSA seems feasible, but the identified challenges could impede the expected benefits when not taken into account. This study identifies and synthesizes the reported challenges and solution directions, but further research on these directions is needed to leverage the successful MSA adoption.},
  issue = {11},
  langid = {english},
  keywords = {distributed architecture,microservice architecture,systematic literature review},
  file = {C:\Users\jonas\Zotero\storage\56L5IRDD\Söylemez et al. - 2022 - Challenges and Solution Directions of Microservice Architectures A Systematic Literature Review.pdf}
}

@book{teamCloudNativeApplicationArchitecture2024,
  title = {Cloud-{{Native Application Architecture}}: {{Microservice Development Best Practice}}},
  shorttitle = {Cloud-{{Native Application Architecture}}},
  author = {Team, FreeWheel Biz-UI},
  date = {2024},
  publisher = {Springer Nature},
  location = {Singapore},
  doi = {10.1007/978-981-19-9782-2},
  url = {https://link.springer.com/10.1007/978-981-19-9782-2},
  urldate = {2025-01-08},
  isbn = {978-981-19-9781-5 978-981-19-9782-2},
  langid = {english},
  keywords = {AWS,CI/CD,Cloud native,DevOps,Istio,Lambda,Microservice,Serverless,Service Mesh,Software development},
  file = {C:\Users\jonas\Zotero\storage\4U4ZLU7B\Team - 2024 - Cloud-Native Application Architecture Microservice Development Best Practice.pdf}
}

@book{vanmerodeContinuousIntegrationCI2023,
  title = {Continuous {{Integration}} ({{CI}}) and {{Continuous Delivery}} ({{CD}}): {{A Practical Guide}} to {{Designing}} and {{Developing Pipelines}}},
  shorttitle = {Continuous {{Integration}} ({{CI}}) and {{Continuous Delivery}} ({{CD}})},
  author = {Van Merode, Henry},
  date = {2023},
  publisher = {Apress},
  location = {Berkeley, CA},
  doi = {10.1007/978-1-4842-9228-0},
  url = {https://link.springer.com/10.1007/978-1-4842-9228-0},
  urldate = {2025-03-19},
  isbn = {978-1-4842-9227-3 978-1-4842-9228-0},
  langid = {english},
  keywords = {Azure,CI/CD blueprint,CI/CD design,CI/CD pipeline constructs,CI/CD requirements,CI/CD security measures,Continuous Delivery,Continuous Integration,DevOps,DevOps assembly line,Testing pipelines},
  file = {C:\Users\jonas\Zotero\storage\9BM5NR29\Van Merode - 2023 - Continuous Integration (CI) and Continuous Delivery (CD) A Practical Guide to Designing and Develop.pdf}
}

@article{waseemDesignMonitoringTesting2021,
  title = {Design, Monitoring, and Testing of Microservices Systems: {{The}} Practitioners’ Perspective},
  shorttitle = {Design, Monitoring, and Testing of Microservices Systems},
  author = {Waseem, Muhammad and Liang, Peng and Shahin, Mojtaba and Di Salle, Amleto and Márquez, Gastón},
  date = {2021-12-01},
  journaltitle = {Journal of Systems and Software},
  shortjournal = {Journal of Systems and Software},
  volume = {182},
  pages = {111061},
  issn = {0164-1212},
  doi = {10.1016/j.jss.2021.111061},
  url = {https://www.sciencedirect.com/science/article/pii/S0164121221001588},
  urldate = {2025-03-14},
  abstract = {Context: Microservices Architecture (MSA) has received significant attention in the software industry. However, little empirical evidence exists on design, monitoring, and testing of microservices systems. Objective: This research aims to gain a deep understanding of how microservices systems are designed, monitored, and tested in the industry. Methods: A mixed-methods study was conducted with 106 survey responses and 6 interviews from microservices practitioners. Results: The main findings are: (1) a combination of domain-driven design and business capability is the most used strategy to decompose an application into microservices, (2) over half of the participants used architecture evaluation and architecture implementation when designing microservices systems, (3) API gateway and Backend for frontend patterns are the most used MSA patterns, (4) resource usage and load balancing as monitoring metrics, log management and exception tracking as monitoring practices are widely used, (5) unit and end-to-end testing are the most used testing strategies, and (6) the complexity of microservices systems poses challenges for their design, monitoring, and testing, for which there are no dedicated solutions. Conclusions: Our findings reveal that more research is needed to (1) deal with microservices complexity at the design level, (2) handle security in microservices systems, and (3) address the monitoring and testing challenges through dedicated solutions.},
  keywords = {Design,Industrial survey,Microservices architecture,Monitoring,Testing},
  file = {C\:\\Users\\jonas\\Zotero\\storage\\2H7FQV7Z\\Waseem et al. - 2021 - Design, monitoring, and testing of microservices systems The practitioners’ perspective.pdf;C\:\\Users\\jonas\\Zotero\\storage\\E2KQYV5I\\S0164121221001588.html}
}

@article{waseemSystematicMappingStudy2020,
  title = {A {{Systematic Mapping Study}} on {{Microservices Architecture}} in {{DevOps}}},
  author = {Waseem, Muhammad and Liang, Peng and Shahin, Mojtaba},
  date = {2020-12-01},
  journaltitle = {Journal of Systems and Software},
  shortjournal = {Journal of Systems and Software},
  volume = {170},
  pages = {110798},
  issn = {0164-1212},
  doi = {10.1016/j.jss.2020.110798},
  url = {https://www.sciencedirect.com/science/article/pii/S0164121220302053},
  urldate = {2025-01-27},
  abstract = {Context: Applying Microservices Architecture (MSA) in DevOps has received significant attention in recent years. However, there exists no comprehensive review of the state of research on this topic. Objective: This work aims to systematically identify, analyze, and classify the literature on MSA in DevOps. Methods: A Systematic Mapping Study (SMS) has been conducted on the literature published between January 2009 and July 2018. Results: Forty-seven studies were finally selected and the key results are: (1) Three themes on the research on MSA in DevOps are “microservices development and operations in DevOps”, “approaches and tool support for MSA based systems in DevOps”, and “MSA migration experiences in DevOps”. (2) 24 problems with their solutions regarding implementing MSA in DevOps are identified. (3) MSA is mainly described by using boxes and lines. (4) Most of the quality attributes are positively affected when employing MSA in DevOps. (5) 50 tools that support building MSA based systems in DevOps are collected. (6) The combination of MSA and DevOps has been applied in a wide range of application domains. Conclusion: The results and findings will benefit researchers and practitioners to conduct further research and bring more dedicated solutions for the issues of MSA in DevOps.},
  keywords = {DevOps,Microservices Architecture,Systematic Mapping Study},
  file = {C\:\\Users\\jonas\\Zotero\\storage\\SIU7EVPJ\\Waseem et al. - 2020 - A Systematic Mapping Study on Microservices Architecture in DevOps.pdf;C\:\\Users\\jonas\\Zotero\\storage\\Y5ZPKJTL\\S0164121220302053.html}
}

@book{westerveldAPITestingDevelopment2021a,
  title = {{{API Testing}} and {{Development}} with {{Postman}} : {{A Practical Guide}} to {{Creating}}, {{Testing}}, and {{Managing APIs}} for {{Automated Software Testing}}},
  shorttitle = {{{API Testing}} and {{Development}} with {{Postman}}},
  author = {Westerveld, Dave},
  date = {2021},
  publisher = {Packt Publishing},
  location = {Birmingham},
  url = {https://search.ebscohost.com/login.aspx?direct=true&db=nlebk&AN=2913886&site=ehost-live},
  urldate = {2025-01-08},
  abstract = {Explore the world of APIs and learn how to integrate them with production-ready applications using Postman and the Newman CLIKey FeaturesLearn the tenets of effective API testing and API designGain an in-depth understanding of the various features Postman has to offerKnow when and how to use Postman for creating high-quality APIs for software and web appsBook DescriptionPostman enables the exploration and testing of web APIs, helping testers and developers figure out how an API works. With Postman, you can create effective test automation for any APIs. If you want to put your knowledge of APIs to work quickly, this practical guide to using Postman will help you get started. The book provides a hands-on approach to learning the implementation and associated methodologies that will have you up and running with Postman in no time. Complete with step-by-step explanations of essential concepts, practical examples, and self-assessment questions, this book begins by taking you through the principles of effective API testing. A combination of theory coupled with real-world examples will help you learn how to use Postman to create well-designed, documented, and tested APIs. You'll then be able to try some hands-on projects that will teach you how to add test automation to an already existing API with Postman, and guide you in using Postman to create a well-designed API from scratch. By the end of this book, you'll be able to use Postman to set up and run API tests for any API that you are working with. What you will learnFind out what is involved in effective API testingUse data-driven testing in Postman to create scalable API testsUnderstand what a well-designed API looks likeBecome well-versed with API terminology, including the different types of APIsGet to grips with performing functional and non-functional testing of an APIDiscover how to use industry standards such as OpenAPI and mocking in PostmanWho this book is forThe book is for software testing professionals and software developers looking to improve product and API quality through API test automation. You will find this book useful if understand APIs and want to build your skills for creating, testing, and documenting APIs. The book assumes beginner-level knowledge of JavaScript and API development.},
  isbn = {978-1-80056-920-1},
  langid = {english},
  keywords = {Application program interfaces (Computer software),Application program interfaces (Computer software)--Testing,COMPUTERS / Internet / Web Services & APIs,COMPUTERS / Software Development & Engineering / Quality Assurance & Testing,COMPUTERS / Web / General},
  file = {C:\Users\jonas\Zotero\storage\SQ6QSDXB\bmxlYmtfXzI5MTM4ODZfX0FO0.html}
}
